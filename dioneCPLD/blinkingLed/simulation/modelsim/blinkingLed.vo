// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "02/06/2023 00:05:17"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module blinkingLed (
	clk,
	LED);
input 	clk;
output 	LED;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \counter[0]~63 ;
wire \counter[1]~61 ;
wire \counter[1]~61COUT1_65 ;
wire \counter[2]~59 ;
wire \counter[2]~59COUT1_66 ;
wire \counter[3]~57 ;
wire \counter[3]~57COUT1_67 ;
wire \counter[4]~3 ;
wire \counter[4]~3COUT1_68 ;
wire \counter[5]~5 ;
wire \counter[6]~7 ;
wire \counter[6]~7COUT1_69 ;
wire \counter[7]~9 ;
wire \counter[7]~9COUT1_70 ;
wire \counter[8]~11 ;
wire \counter[8]~11COUT1_71 ;
wire \counter[9]~13 ;
wire \counter[9]~13COUT1_72 ;
wire \counter[10]~15 ;
wire \counter[11]~17 ;
wire \counter[11]~17COUT1_73 ;
wire \counter[12]~19 ;
wire \counter[12]~19COUT1_74 ;
wire \counter[13]~21 ;
wire \counter[13]~21COUT1_75 ;
wire \counter[14]~23 ;
wire \counter[14]~23COUT1_76 ;
wire \counter[15]~25 ;
wire \counter[16]~27 ;
wire \counter[16]~27COUT1_77 ;
wire \counter[17]~29 ;
wire \counter[17]~29COUT1_78 ;
wire \counter[18]~31 ;
wire \counter[18]~31COUT1_79 ;
wire \counter[19]~33 ;
wire \counter[19]~33COUT1_80 ;
wire \counter[20]~35 ;
wire \counter[21]~37 ;
wire \counter[21]~37COUT1_81 ;
wire \counter[22]~39 ;
wire \counter[22]~39COUT1_82 ;
wire \counter[23]~41 ;
wire \counter[23]~41COUT1_83 ;
wire \counter[24]~43 ;
wire \counter[24]~43COUT1_84 ;
wire \counter[25]~45 ;
wire \counter[26]~47 ;
wire \counter[26]~47COUT1_85 ;
wire \counter[27]~49 ;
wire \counter[27]~49COUT1_86 ;
wire \counter[28]~51 ;
wire \counter[28]~51COUT1_87 ;
wire \counter[29]~53 ;
wire \counter[29]~53COUT1_88 ;
wire \counter[30]~55 ;
wire \LessThan0~5_combout ;
wire \LessThan0~6_combout ;
wire \LessThan0~7_combout ;
wire \LessThan0~3_combout ;
wire \LessThan0~2_combout ;
wire \LessThan0~0_combout ;
wire \LessThan0~1_combout ;
wire \LessThan0~4_combout ;
wire \LessThan0~8_combout ;
wire \state~regout ;
wire [31:0] counter;


// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y4_N4
maxii_lcell \counter[0] (
// Equation(s):
// counter[0] = DFFEAS((!counter[0]), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[0]~63  = CARRY((counter[0]))

	.clk(\clk~combout ),
	.dataa(counter[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[0]),
	.cout(\counter[0]~63 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[0] .lut_mask = "55aa";
defparam \counter[0] .operation_mode = "arithmetic";
defparam \counter[0] .output_mode = "reg_only";
defparam \counter[0] .register_cascade_mode = "off";
defparam \counter[0] .sum_lutc_input = "datac";
defparam \counter[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y4_N5
maxii_lcell \counter[1] (
// Equation(s):
// counter[1] = DFFEAS(counter[1] $ ((((\counter[0]~63 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[1]~61  = CARRY(((!\counter[0]~63 )) # (!counter[1]))
// \counter[1]~61COUT1_65  = CARRY(((!\counter[0]~63 )) # (!counter[1]))

	.clk(\clk~combout ),
	.dataa(counter[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[0]~63 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[1]),
	.cout(),
	.cout0(\counter[1]~61 ),
	.cout1(\counter[1]~61COUT1_65 ));
// synopsys translate_off
defparam \counter[1] .cin_used = "true";
defparam \counter[1] .lut_mask = "5a5f";
defparam \counter[1] .operation_mode = "arithmetic";
defparam \counter[1] .output_mode = "reg_only";
defparam \counter[1] .register_cascade_mode = "off";
defparam \counter[1] .sum_lutc_input = "cin";
defparam \counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y4_N6
maxii_lcell \counter[2] (
// Equation(s):
// counter[2] = DFFEAS(counter[2] $ ((((!(!\counter[0]~63  & \counter[1]~61 ) # (\counter[0]~63  & \counter[1]~61COUT1_65 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[2]~59  = CARRY((counter[2] & ((!\counter[1]~61 ))))
// \counter[2]~59COUT1_66  = CARRY((counter[2] & ((!\counter[1]~61COUT1_65 ))))

	.clk(\clk~combout ),
	.dataa(counter[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[0]~63 ),
	.cin0(\counter[1]~61 ),
	.cin1(\counter[1]~61COUT1_65 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[2]),
	.cout(),
	.cout0(\counter[2]~59 ),
	.cout1(\counter[2]~59COUT1_66 ));
// synopsys translate_off
defparam \counter[2] .cin0_used = "true";
defparam \counter[2] .cin1_used = "true";
defparam \counter[2] .cin_used = "true";
defparam \counter[2] .lut_mask = "a50a";
defparam \counter[2] .operation_mode = "arithmetic";
defparam \counter[2] .output_mode = "reg_only";
defparam \counter[2] .register_cascade_mode = "off";
defparam \counter[2] .sum_lutc_input = "cin";
defparam \counter[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y4_N7
maxii_lcell \counter[3] (
// Equation(s):
// counter[3] = DFFEAS((counter[3] $ (((!\counter[0]~63  & \counter[2]~59 ) # (\counter[0]~63  & \counter[2]~59COUT1_66 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[3]~57  = CARRY(((!\counter[2]~59 ) # (!counter[3])))
// \counter[3]~57COUT1_67  = CARRY(((!\counter[2]~59COUT1_66 ) # (!counter[3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[0]~63 ),
	.cin0(\counter[2]~59 ),
	.cin1(\counter[2]~59COUT1_66 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[3]),
	.cout(),
	.cout0(\counter[3]~57 ),
	.cout1(\counter[3]~57COUT1_67 ));
// synopsys translate_off
defparam \counter[3] .cin0_used = "true";
defparam \counter[3] .cin1_used = "true";
defparam \counter[3] .cin_used = "true";
defparam \counter[3] .lut_mask = "3c3f";
defparam \counter[3] .operation_mode = "arithmetic";
defparam \counter[3] .output_mode = "reg_only";
defparam \counter[3] .register_cascade_mode = "off";
defparam \counter[3] .sum_lutc_input = "cin";
defparam \counter[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y4_N8
maxii_lcell \counter[4] (
// Equation(s):
// counter[4] = DFFEAS(counter[4] $ ((((!(!\counter[0]~63  & \counter[3]~57 ) # (\counter[0]~63  & \counter[3]~57COUT1_67 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[4]~3  = CARRY((counter[4] & ((!\counter[3]~57 ))))
// \counter[4]~3COUT1_68  = CARRY((counter[4] & ((!\counter[3]~57COUT1_67 ))))

	.clk(\clk~combout ),
	.dataa(counter[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[0]~63 ),
	.cin0(\counter[3]~57 ),
	.cin1(\counter[3]~57COUT1_67 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[4]),
	.cout(),
	.cout0(\counter[4]~3 ),
	.cout1(\counter[4]~3COUT1_68 ));
// synopsys translate_off
defparam \counter[4] .cin0_used = "true";
defparam \counter[4] .cin1_used = "true";
defparam \counter[4] .cin_used = "true";
defparam \counter[4] .lut_mask = "a50a";
defparam \counter[4] .operation_mode = "arithmetic";
defparam \counter[4] .output_mode = "reg_only";
defparam \counter[4] .register_cascade_mode = "off";
defparam \counter[4] .sum_lutc_input = "cin";
defparam \counter[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y4_N9
maxii_lcell \counter[5] (
// Equation(s):
// counter[5] = DFFEAS((counter[5] $ (((!\counter[0]~63  & \counter[4]~3 ) # (\counter[0]~63  & \counter[4]~3COUT1_68 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[5]~5  = CARRY(((!\counter[4]~3COUT1_68 ) # (!counter[5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[0]~63 ),
	.cin0(\counter[4]~3 ),
	.cin1(\counter[4]~3COUT1_68 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[5]),
	.cout(\counter[5]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[5] .cin0_used = "true";
defparam \counter[5] .cin1_used = "true";
defparam \counter[5] .cin_used = "true";
defparam \counter[5] .lut_mask = "3c3f";
defparam \counter[5] .operation_mode = "arithmetic";
defparam \counter[5] .output_mode = "reg_only";
defparam \counter[5] .register_cascade_mode = "off";
defparam \counter[5] .sum_lutc_input = "cin";
defparam \counter[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N0
maxii_lcell \counter[6] (
// Equation(s):
// counter[6] = DFFEAS((counter[6] $ ((!\counter[5]~5 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[6]~7  = CARRY(((counter[6] & !\counter[5]~5 )))
// \counter[6]~7COUT1_69  = CARRY(((counter[6] & !\counter[5]~5 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[5]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[6]),
	.cout(),
	.cout0(\counter[6]~7 ),
	.cout1(\counter[6]~7COUT1_69 ));
// synopsys translate_off
defparam \counter[6] .cin_used = "true";
defparam \counter[6] .lut_mask = "c30c";
defparam \counter[6] .operation_mode = "arithmetic";
defparam \counter[6] .output_mode = "reg_only";
defparam \counter[6] .register_cascade_mode = "off";
defparam \counter[6] .sum_lutc_input = "cin";
defparam \counter[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N1
maxii_lcell \counter[7] (
// Equation(s):
// counter[7] = DFFEAS((counter[7] $ (((!\counter[5]~5  & \counter[6]~7 ) # (\counter[5]~5  & \counter[6]~7COUT1_69 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[7]~9  = CARRY(((!\counter[6]~7 ) # (!counter[7])))
// \counter[7]~9COUT1_70  = CARRY(((!\counter[6]~7COUT1_69 ) # (!counter[7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[5]~5 ),
	.cin0(\counter[6]~7 ),
	.cin1(\counter[6]~7COUT1_69 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[7]),
	.cout(),
	.cout0(\counter[7]~9 ),
	.cout1(\counter[7]~9COUT1_70 ));
// synopsys translate_off
defparam \counter[7] .cin0_used = "true";
defparam \counter[7] .cin1_used = "true";
defparam \counter[7] .cin_used = "true";
defparam \counter[7] .lut_mask = "3c3f";
defparam \counter[7] .operation_mode = "arithmetic";
defparam \counter[7] .output_mode = "reg_only";
defparam \counter[7] .register_cascade_mode = "off";
defparam \counter[7] .sum_lutc_input = "cin";
defparam \counter[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N2
maxii_lcell \counter[8] (
// Equation(s):
// counter[8] = DFFEAS((counter[8] $ ((!(!\counter[5]~5  & \counter[7]~9 ) # (\counter[5]~5  & \counter[7]~9COUT1_70 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[8]~11  = CARRY(((counter[8] & !\counter[7]~9 )))
// \counter[8]~11COUT1_71  = CARRY(((counter[8] & !\counter[7]~9COUT1_70 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[5]~5 ),
	.cin0(\counter[7]~9 ),
	.cin1(\counter[7]~9COUT1_70 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[8]),
	.cout(),
	.cout0(\counter[8]~11 ),
	.cout1(\counter[8]~11COUT1_71 ));
// synopsys translate_off
defparam \counter[8] .cin0_used = "true";
defparam \counter[8] .cin1_used = "true";
defparam \counter[8] .cin_used = "true";
defparam \counter[8] .lut_mask = "c30c";
defparam \counter[8] .operation_mode = "arithmetic";
defparam \counter[8] .output_mode = "reg_only";
defparam \counter[8] .register_cascade_mode = "off";
defparam \counter[8] .sum_lutc_input = "cin";
defparam \counter[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N3
maxii_lcell \counter[9] (
// Equation(s):
// counter[9] = DFFEAS(counter[9] $ (((((!\counter[5]~5  & \counter[8]~11 ) # (\counter[5]~5  & \counter[8]~11COUT1_71 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[9]~13  = CARRY(((!\counter[8]~11 )) # (!counter[9]))
// \counter[9]~13COUT1_72  = CARRY(((!\counter[8]~11COUT1_71 )) # (!counter[9]))

	.clk(\clk~combout ),
	.dataa(counter[9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[5]~5 ),
	.cin0(\counter[8]~11 ),
	.cin1(\counter[8]~11COUT1_71 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[9]),
	.cout(),
	.cout0(\counter[9]~13 ),
	.cout1(\counter[9]~13COUT1_72 ));
// synopsys translate_off
defparam \counter[9] .cin0_used = "true";
defparam \counter[9] .cin1_used = "true";
defparam \counter[9] .cin_used = "true";
defparam \counter[9] .lut_mask = "5a5f";
defparam \counter[9] .operation_mode = "arithmetic";
defparam \counter[9] .output_mode = "reg_only";
defparam \counter[9] .register_cascade_mode = "off";
defparam \counter[9] .sum_lutc_input = "cin";
defparam \counter[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N4
maxii_lcell \counter[10] (
// Equation(s):
// counter[10] = DFFEAS(counter[10] $ ((((!(!\counter[5]~5  & \counter[9]~13 ) # (\counter[5]~5  & \counter[9]~13COUT1_72 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[10]~15  = CARRY((counter[10] & ((!\counter[9]~13COUT1_72 ))))

	.clk(\clk~combout ),
	.dataa(counter[10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[5]~5 ),
	.cin0(\counter[9]~13 ),
	.cin1(\counter[9]~13COUT1_72 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[10]),
	.cout(\counter[10]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[10] .cin0_used = "true";
defparam \counter[10] .cin1_used = "true";
defparam \counter[10] .cin_used = "true";
defparam \counter[10] .lut_mask = "a50a";
defparam \counter[10] .operation_mode = "arithmetic";
defparam \counter[10] .output_mode = "reg_only";
defparam \counter[10] .register_cascade_mode = "off";
defparam \counter[10] .sum_lutc_input = "cin";
defparam \counter[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N5
maxii_lcell \counter[11] (
// Equation(s):
// counter[11] = DFFEAS(counter[11] $ ((((\counter[10]~15 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[11]~17  = CARRY(((!\counter[10]~15 )) # (!counter[11]))
// \counter[11]~17COUT1_73  = CARRY(((!\counter[10]~15 )) # (!counter[11]))

	.clk(\clk~combout ),
	.dataa(counter[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[10]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[11]),
	.cout(),
	.cout0(\counter[11]~17 ),
	.cout1(\counter[11]~17COUT1_73 ));
// synopsys translate_off
defparam \counter[11] .cin_used = "true";
defparam \counter[11] .lut_mask = "5a5f";
defparam \counter[11] .operation_mode = "arithmetic";
defparam \counter[11] .output_mode = "reg_only";
defparam \counter[11] .register_cascade_mode = "off";
defparam \counter[11] .sum_lutc_input = "cin";
defparam \counter[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N6
maxii_lcell \counter[12] (
// Equation(s):
// counter[12] = DFFEAS(counter[12] $ ((((!(!\counter[10]~15  & \counter[11]~17 ) # (\counter[10]~15  & \counter[11]~17COUT1_73 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[12]~19  = CARRY((counter[12] & ((!\counter[11]~17 ))))
// \counter[12]~19COUT1_74  = CARRY((counter[12] & ((!\counter[11]~17COUT1_73 ))))

	.clk(\clk~combout ),
	.dataa(counter[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[10]~15 ),
	.cin0(\counter[11]~17 ),
	.cin1(\counter[11]~17COUT1_73 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[12]),
	.cout(),
	.cout0(\counter[12]~19 ),
	.cout1(\counter[12]~19COUT1_74 ));
// synopsys translate_off
defparam \counter[12] .cin0_used = "true";
defparam \counter[12] .cin1_used = "true";
defparam \counter[12] .cin_used = "true";
defparam \counter[12] .lut_mask = "a50a";
defparam \counter[12] .operation_mode = "arithmetic";
defparam \counter[12] .output_mode = "reg_only";
defparam \counter[12] .register_cascade_mode = "off";
defparam \counter[12] .sum_lutc_input = "cin";
defparam \counter[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N7
maxii_lcell \counter[13] (
// Equation(s):
// counter[13] = DFFEAS((counter[13] $ (((!\counter[10]~15  & \counter[12]~19 ) # (\counter[10]~15  & \counter[12]~19COUT1_74 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[13]~21  = CARRY(((!\counter[12]~19 ) # (!counter[13])))
// \counter[13]~21COUT1_75  = CARRY(((!\counter[12]~19COUT1_74 ) # (!counter[13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[10]~15 ),
	.cin0(\counter[12]~19 ),
	.cin1(\counter[12]~19COUT1_74 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[13]),
	.cout(),
	.cout0(\counter[13]~21 ),
	.cout1(\counter[13]~21COUT1_75 ));
// synopsys translate_off
defparam \counter[13] .cin0_used = "true";
defparam \counter[13] .cin1_used = "true";
defparam \counter[13] .cin_used = "true";
defparam \counter[13] .lut_mask = "3c3f";
defparam \counter[13] .operation_mode = "arithmetic";
defparam \counter[13] .output_mode = "reg_only";
defparam \counter[13] .register_cascade_mode = "off";
defparam \counter[13] .sum_lutc_input = "cin";
defparam \counter[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N8
maxii_lcell \counter[14] (
// Equation(s):
// counter[14] = DFFEAS(counter[14] $ ((((!(!\counter[10]~15  & \counter[13]~21 ) # (\counter[10]~15  & \counter[13]~21COUT1_75 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[14]~23  = CARRY((counter[14] & ((!\counter[13]~21 ))))
// \counter[14]~23COUT1_76  = CARRY((counter[14] & ((!\counter[13]~21COUT1_75 ))))

	.clk(\clk~combout ),
	.dataa(counter[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[10]~15 ),
	.cin0(\counter[13]~21 ),
	.cin1(\counter[13]~21COUT1_75 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[14]),
	.cout(),
	.cout0(\counter[14]~23 ),
	.cout1(\counter[14]~23COUT1_76 ));
// synopsys translate_off
defparam \counter[14] .cin0_used = "true";
defparam \counter[14] .cin1_used = "true";
defparam \counter[14] .cin_used = "true";
defparam \counter[14] .lut_mask = "a50a";
defparam \counter[14] .operation_mode = "arithmetic";
defparam \counter[14] .output_mode = "reg_only";
defparam \counter[14] .register_cascade_mode = "off";
defparam \counter[14] .sum_lutc_input = "cin";
defparam \counter[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N9
maxii_lcell \counter[15] (
// Equation(s):
// counter[15] = DFFEAS((counter[15] $ (((!\counter[10]~15  & \counter[14]~23 ) # (\counter[10]~15  & \counter[14]~23COUT1_76 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[15]~25  = CARRY(((!\counter[14]~23COUT1_76 ) # (!counter[15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[10]~15 ),
	.cin0(\counter[14]~23 ),
	.cin1(\counter[14]~23COUT1_76 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[15]),
	.cout(\counter[15]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[15] .cin0_used = "true";
defparam \counter[15] .cin1_used = "true";
defparam \counter[15] .cin_used = "true";
defparam \counter[15] .lut_mask = "3c3f";
defparam \counter[15] .operation_mode = "arithmetic";
defparam \counter[15] .output_mode = "reg_only";
defparam \counter[15] .register_cascade_mode = "off";
defparam \counter[15] .sum_lutc_input = "cin";
defparam \counter[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N0
maxii_lcell \counter[16] (
// Equation(s):
// counter[16] = DFFEAS((counter[16] $ ((!\counter[15]~25 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[16]~27  = CARRY(((counter[16] & !\counter[15]~25 )))
// \counter[16]~27COUT1_77  = CARRY(((counter[16] & !\counter[15]~25 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[15]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[16]),
	.cout(),
	.cout0(\counter[16]~27 ),
	.cout1(\counter[16]~27COUT1_77 ));
// synopsys translate_off
defparam \counter[16] .cin_used = "true";
defparam \counter[16] .lut_mask = "c30c";
defparam \counter[16] .operation_mode = "arithmetic";
defparam \counter[16] .output_mode = "reg_only";
defparam \counter[16] .register_cascade_mode = "off";
defparam \counter[16] .sum_lutc_input = "cin";
defparam \counter[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N1
maxii_lcell \counter[17] (
// Equation(s):
// counter[17] = DFFEAS((counter[17] $ (((!\counter[15]~25  & \counter[16]~27 ) # (\counter[15]~25  & \counter[16]~27COUT1_77 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[17]~29  = CARRY(((!\counter[16]~27 ) # (!counter[17])))
// \counter[17]~29COUT1_78  = CARRY(((!\counter[16]~27COUT1_77 ) # (!counter[17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[15]~25 ),
	.cin0(\counter[16]~27 ),
	.cin1(\counter[16]~27COUT1_77 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[17]),
	.cout(),
	.cout0(\counter[17]~29 ),
	.cout1(\counter[17]~29COUT1_78 ));
// synopsys translate_off
defparam \counter[17] .cin0_used = "true";
defparam \counter[17] .cin1_used = "true";
defparam \counter[17] .cin_used = "true";
defparam \counter[17] .lut_mask = "3c3f";
defparam \counter[17] .operation_mode = "arithmetic";
defparam \counter[17] .output_mode = "reg_only";
defparam \counter[17] .register_cascade_mode = "off";
defparam \counter[17] .sum_lutc_input = "cin";
defparam \counter[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N2
maxii_lcell \counter[18] (
// Equation(s):
// counter[18] = DFFEAS((counter[18] $ ((!(!\counter[15]~25  & \counter[17]~29 ) # (\counter[15]~25  & \counter[17]~29COUT1_78 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[18]~31  = CARRY(((counter[18] & !\counter[17]~29 )))
// \counter[18]~31COUT1_79  = CARRY(((counter[18] & !\counter[17]~29COUT1_78 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[15]~25 ),
	.cin0(\counter[17]~29 ),
	.cin1(\counter[17]~29COUT1_78 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[18]),
	.cout(),
	.cout0(\counter[18]~31 ),
	.cout1(\counter[18]~31COUT1_79 ));
// synopsys translate_off
defparam \counter[18] .cin0_used = "true";
defparam \counter[18] .cin1_used = "true";
defparam \counter[18] .cin_used = "true";
defparam \counter[18] .lut_mask = "c30c";
defparam \counter[18] .operation_mode = "arithmetic";
defparam \counter[18] .output_mode = "reg_only";
defparam \counter[18] .register_cascade_mode = "off";
defparam \counter[18] .sum_lutc_input = "cin";
defparam \counter[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N3
maxii_lcell \counter[19] (
// Equation(s):
// counter[19] = DFFEAS(counter[19] $ (((((!\counter[15]~25  & \counter[18]~31 ) # (\counter[15]~25  & \counter[18]~31COUT1_79 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[19]~33  = CARRY(((!\counter[18]~31 )) # (!counter[19]))
// \counter[19]~33COUT1_80  = CARRY(((!\counter[18]~31COUT1_79 )) # (!counter[19]))

	.clk(\clk~combout ),
	.dataa(counter[19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[15]~25 ),
	.cin0(\counter[18]~31 ),
	.cin1(\counter[18]~31COUT1_79 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[19]),
	.cout(),
	.cout0(\counter[19]~33 ),
	.cout1(\counter[19]~33COUT1_80 ));
// synopsys translate_off
defparam \counter[19] .cin0_used = "true";
defparam \counter[19] .cin1_used = "true";
defparam \counter[19] .cin_used = "true";
defparam \counter[19] .lut_mask = "5a5f";
defparam \counter[19] .operation_mode = "arithmetic";
defparam \counter[19] .output_mode = "reg_only";
defparam \counter[19] .register_cascade_mode = "off";
defparam \counter[19] .sum_lutc_input = "cin";
defparam \counter[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N4
maxii_lcell \counter[20] (
// Equation(s):
// counter[20] = DFFEAS(counter[20] $ ((((!(!\counter[15]~25  & \counter[19]~33 ) # (\counter[15]~25  & \counter[19]~33COUT1_80 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[20]~35  = CARRY((counter[20] & ((!\counter[19]~33COUT1_80 ))))

	.clk(\clk~combout ),
	.dataa(counter[20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[15]~25 ),
	.cin0(\counter[19]~33 ),
	.cin1(\counter[19]~33COUT1_80 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[20]),
	.cout(\counter[20]~35 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[20] .cin0_used = "true";
defparam \counter[20] .cin1_used = "true";
defparam \counter[20] .cin_used = "true";
defparam \counter[20] .lut_mask = "a50a";
defparam \counter[20] .operation_mode = "arithmetic";
defparam \counter[20] .output_mode = "reg_only";
defparam \counter[20] .register_cascade_mode = "off";
defparam \counter[20] .sum_lutc_input = "cin";
defparam \counter[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N5
maxii_lcell \counter[21] (
// Equation(s):
// counter[21] = DFFEAS(counter[21] $ ((((\counter[20]~35 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[21]~37  = CARRY(((!\counter[20]~35 )) # (!counter[21]))
// \counter[21]~37COUT1_81  = CARRY(((!\counter[20]~35 )) # (!counter[21]))

	.clk(\clk~combout ),
	.dataa(counter[21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[20]~35 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[21]),
	.cout(),
	.cout0(\counter[21]~37 ),
	.cout1(\counter[21]~37COUT1_81 ));
// synopsys translate_off
defparam \counter[21] .cin_used = "true";
defparam \counter[21] .lut_mask = "5a5f";
defparam \counter[21] .operation_mode = "arithmetic";
defparam \counter[21] .output_mode = "reg_only";
defparam \counter[21] .register_cascade_mode = "off";
defparam \counter[21] .sum_lutc_input = "cin";
defparam \counter[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N6
maxii_lcell \counter[22] (
// Equation(s):
// counter[22] = DFFEAS(counter[22] $ ((((!(!\counter[20]~35  & \counter[21]~37 ) # (\counter[20]~35  & \counter[21]~37COUT1_81 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[22]~39  = CARRY((counter[22] & ((!\counter[21]~37 ))))
// \counter[22]~39COUT1_82  = CARRY((counter[22] & ((!\counter[21]~37COUT1_81 ))))

	.clk(\clk~combout ),
	.dataa(counter[22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[20]~35 ),
	.cin0(\counter[21]~37 ),
	.cin1(\counter[21]~37COUT1_81 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[22]),
	.cout(),
	.cout0(\counter[22]~39 ),
	.cout1(\counter[22]~39COUT1_82 ));
// synopsys translate_off
defparam \counter[22] .cin0_used = "true";
defparam \counter[22] .cin1_used = "true";
defparam \counter[22] .cin_used = "true";
defparam \counter[22] .lut_mask = "a50a";
defparam \counter[22] .operation_mode = "arithmetic";
defparam \counter[22] .output_mode = "reg_only";
defparam \counter[22] .register_cascade_mode = "off";
defparam \counter[22] .sum_lutc_input = "cin";
defparam \counter[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N7
maxii_lcell \counter[23] (
// Equation(s):
// counter[23] = DFFEAS((counter[23] $ (((!\counter[20]~35  & \counter[22]~39 ) # (\counter[20]~35  & \counter[22]~39COUT1_82 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[23]~41  = CARRY(((!\counter[22]~39 ) # (!counter[23])))
// \counter[23]~41COUT1_83  = CARRY(((!\counter[22]~39COUT1_82 ) # (!counter[23])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[20]~35 ),
	.cin0(\counter[22]~39 ),
	.cin1(\counter[22]~39COUT1_82 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[23]),
	.cout(),
	.cout0(\counter[23]~41 ),
	.cout1(\counter[23]~41COUT1_83 ));
// synopsys translate_off
defparam \counter[23] .cin0_used = "true";
defparam \counter[23] .cin1_used = "true";
defparam \counter[23] .cin_used = "true";
defparam \counter[23] .lut_mask = "3c3f";
defparam \counter[23] .operation_mode = "arithmetic";
defparam \counter[23] .output_mode = "reg_only";
defparam \counter[23] .register_cascade_mode = "off";
defparam \counter[23] .sum_lutc_input = "cin";
defparam \counter[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N8
maxii_lcell \counter[24] (
// Equation(s):
// counter[24] = DFFEAS(counter[24] $ ((((!(!\counter[20]~35  & \counter[23]~41 ) # (\counter[20]~35  & \counter[23]~41COUT1_83 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[24]~43  = CARRY((counter[24] & ((!\counter[23]~41 ))))
// \counter[24]~43COUT1_84  = CARRY((counter[24] & ((!\counter[23]~41COUT1_83 ))))

	.clk(\clk~combout ),
	.dataa(counter[24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[20]~35 ),
	.cin0(\counter[23]~41 ),
	.cin1(\counter[23]~41COUT1_83 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[24]),
	.cout(),
	.cout0(\counter[24]~43 ),
	.cout1(\counter[24]~43COUT1_84 ));
// synopsys translate_off
defparam \counter[24] .cin0_used = "true";
defparam \counter[24] .cin1_used = "true";
defparam \counter[24] .cin_used = "true";
defparam \counter[24] .lut_mask = "a50a";
defparam \counter[24] .operation_mode = "arithmetic";
defparam \counter[24] .output_mode = "reg_only";
defparam \counter[24] .register_cascade_mode = "off";
defparam \counter[24] .sum_lutc_input = "cin";
defparam \counter[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N9
maxii_lcell \counter[25] (
// Equation(s):
// counter[25] = DFFEAS((counter[25] $ (((!\counter[20]~35  & \counter[24]~43 ) # (\counter[20]~35  & \counter[24]~43COUT1_84 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[25]~45  = CARRY(((!\counter[24]~43COUT1_84 ) # (!counter[25])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[20]~35 ),
	.cin0(\counter[24]~43 ),
	.cin1(\counter[24]~43COUT1_84 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[25]),
	.cout(\counter[25]~45 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[25] .cin0_used = "true";
defparam \counter[25] .cin1_used = "true";
defparam \counter[25] .cin_used = "true";
defparam \counter[25] .lut_mask = "3c3f";
defparam \counter[25] .operation_mode = "arithmetic";
defparam \counter[25] .output_mode = "reg_only";
defparam \counter[25] .register_cascade_mode = "off";
defparam \counter[25] .sum_lutc_input = "cin";
defparam \counter[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N0
maxii_lcell \counter[26] (
// Equation(s):
// counter[26] = DFFEAS((counter[26] $ ((!\counter[25]~45 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[26]~47  = CARRY(((counter[26] & !\counter[25]~45 )))
// \counter[26]~47COUT1_85  = CARRY(((counter[26] & !\counter[25]~45 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[25]~45 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[26]),
	.cout(),
	.cout0(\counter[26]~47 ),
	.cout1(\counter[26]~47COUT1_85 ));
// synopsys translate_off
defparam \counter[26] .cin_used = "true";
defparam \counter[26] .lut_mask = "c30c";
defparam \counter[26] .operation_mode = "arithmetic";
defparam \counter[26] .output_mode = "reg_only";
defparam \counter[26] .register_cascade_mode = "off";
defparam \counter[26] .sum_lutc_input = "cin";
defparam \counter[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N1
maxii_lcell \counter[27] (
// Equation(s):
// counter[27] = DFFEAS((counter[27] $ (((!\counter[25]~45  & \counter[26]~47 ) # (\counter[25]~45  & \counter[26]~47COUT1_85 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[27]~49  = CARRY(((!\counter[26]~47 ) # (!counter[27])))
// \counter[27]~49COUT1_86  = CARRY(((!\counter[26]~47COUT1_85 ) # (!counter[27])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[27]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[25]~45 ),
	.cin0(\counter[26]~47 ),
	.cin1(\counter[26]~47COUT1_85 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[27]),
	.cout(),
	.cout0(\counter[27]~49 ),
	.cout1(\counter[27]~49COUT1_86 ));
// synopsys translate_off
defparam \counter[27] .cin0_used = "true";
defparam \counter[27] .cin1_used = "true";
defparam \counter[27] .cin_used = "true";
defparam \counter[27] .lut_mask = "3c3f";
defparam \counter[27] .operation_mode = "arithmetic";
defparam \counter[27] .output_mode = "reg_only";
defparam \counter[27] .register_cascade_mode = "off";
defparam \counter[27] .sum_lutc_input = "cin";
defparam \counter[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N2
maxii_lcell \counter[28] (
// Equation(s):
// counter[28] = DFFEAS((counter[28] $ ((!(!\counter[25]~45  & \counter[27]~49 ) # (\counter[25]~45  & \counter[27]~49COUT1_86 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[28]~51  = CARRY(((counter[28] & !\counter[27]~49 )))
// \counter[28]~51COUT1_87  = CARRY(((counter[28] & !\counter[27]~49COUT1_86 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter[28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[25]~45 ),
	.cin0(\counter[27]~49 ),
	.cin1(\counter[27]~49COUT1_86 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[28]),
	.cout(),
	.cout0(\counter[28]~51 ),
	.cout1(\counter[28]~51COUT1_87 ));
// synopsys translate_off
defparam \counter[28] .cin0_used = "true";
defparam \counter[28] .cin1_used = "true";
defparam \counter[28] .cin_used = "true";
defparam \counter[28] .lut_mask = "c30c";
defparam \counter[28] .operation_mode = "arithmetic";
defparam \counter[28] .output_mode = "reg_only";
defparam \counter[28] .register_cascade_mode = "off";
defparam \counter[28] .sum_lutc_input = "cin";
defparam \counter[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxii_lcell \counter[29] (
// Equation(s):
// counter[29] = DFFEAS(counter[29] $ (((((!\counter[25]~45  & \counter[28]~51 ) # (\counter[25]~45  & \counter[28]~51COUT1_87 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[29]~53  = CARRY(((!\counter[28]~51 )) # (!counter[29]))
// \counter[29]~53COUT1_88  = CARRY(((!\counter[28]~51COUT1_87 )) # (!counter[29]))

	.clk(\clk~combout ),
	.dataa(counter[29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[25]~45 ),
	.cin0(\counter[28]~51 ),
	.cin1(\counter[28]~51COUT1_87 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[29]),
	.cout(),
	.cout0(\counter[29]~53 ),
	.cout1(\counter[29]~53COUT1_88 ));
// synopsys translate_off
defparam \counter[29] .cin0_used = "true";
defparam \counter[29] .cin1_used = "true";
defparam \counter[29] .cin_used = "true";
defparam \counter[29] .lut_mask = "5a5f";
defparam \counter[29] .operation_mode = "arithmetic";
defparam \counter[29] .output_mode = "reg_only";
defparam \counter[29] .register_cascade_mode = "off";
defparam \counter[29] .sum_lutc_input = "cin";
defparam \counter[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N4
maxii_lcell \counter[30] (
// Equation(s):
// counter[30] = DFFEAS(counter[30] $ ((((!(!\counter[25]~45  & \counter[29]~53 ) # (\counter[25]~45  & \counter[29]~53COUT1_88 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )
// \counter[30]~55  = CARRY((counter[30] & ((!\counter[29]~53COUT1_88 ))))

	.clk(\clk~combout ),
	.dataa(counter[30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[25]~45 ),
	.cin0(\counter[29]~53 ),
	.cin1(\counter[29]~53COUT1_88 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[30]),
	.cout(\counter[30]~55 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[30] .cin0_used = "true";
defparam \counter[30] .cin1_used = "true";
defparam \counter[30] .cin_used = "true";
defparam \counter[30] .lut_mask = "a50a";
defparam \counter[30] .operation_mode = "arithmetic";
defparam \counter[30] .output_mode = "reg_only";
defparam \counter[30] .register_cascade_mode = "off";
defparam \counter[30] .sum_lutc_input = "cin";
defparam \counter[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N5
maxii_lcell \counter[31] (
// Equation(s):
// counter[31] = DFFEAS(counter[31] $ ((((\counter[30]~55 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~8_combout , )

	.clk(\clk~combout ),
	.dataa(counter[31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~8_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter[30]~55 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter[31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter[31] .cin_used = "true";
defparam \counter[31] .lut_mask = "5a5a";
defparam \counter[31] .operation_mode = "normal";
defparam \counter[31] .output_mode = "reg_only";
defparam \counter[31] .register_cascade_mode = "off";
defparam \counter[31] .sum_lutc_input = "cin";
defparam \counter[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N7
maxii_lcell \LessThan0~5 (
// Equation(s):
// \LessThan0~5_combout  = (!counter[21] & (!counter[23] & (!counter[22] & !counter[20])))

	.clk(gnd),
	.dataa(counter[21]),
	.datab(counter[23]),
	.datac(counter[22]),
	.datad(counter[20]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~5 .lut_mask = "0001";
defparam \LessThan0~5 .operation_mode = "normal";
defparam \LessThan0~5 .output_mode = "comb_only";
defparam \LessThan0~5 .register_cascade_mode = "off";
defparam \LessThan0~5 .sum_lutc_input = "datac";
defparam \LessThan0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N8
maxii_lcell \LessThan0~6 (
// Equation(s):
// \LessThan0~6_combout  = (!counter[25] & (!counter[27] & (!counter[26] & !counter[24])))

	.clk(gnd),
	.dataa(counter[25]),
	.datab(counter[27]),
	.datac(counter[26]),
	.datad(counter[24]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~6 .lut_mask = "0001";
defparam \LessThan0~6 .operation_mode = "normal";
defparam \LessThan0~6 .output_mode = "comb_only";
defparam \LessThan0~6 .register_cascade_mode = "off";
defparam \LessThan0~6 .sum_lutc_input = "datac";
defparam \LessThan0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N6
maxii_lcell \LessThan0~7 (
// Equation(s):
// \LessThan0~7_combout  = (!counter[29] & (!counter[28] & (!counter[30] & \LessThan0~6_combout )))

	.clk(gnd),
	.dataa(counter[29]),
	.datab(counter[28]),
	.datac(counter[30]),
	.datad(\LessThan0~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~7 .lut_mask = "0100";
defparam \LessThan0~7 .operation_mode = "normal";
defparam \LessThan0~7 .output_mode = "comb_only";
defparam \LessThan0~7 .register_cascade_mode = "off";
defparam \LessThan0~7 .sum_lutc_input = "datac";
defparam \LessThan0~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N9
maxii_lcell \LessThan0~3 (
// Equation(s):
// \LessThan0~3_combout  = (!counter[16] & (!counter[18] & (!counter[17] & !counter[19])))

	.clk(gnd),
	.dataa(counter[16]),
	.datab(counter[18]),
	.datac(counter[17]),
	.datad(counter[19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~3 .lut_mask = "0001";
defparam \LessThan0~3 .operation_mode = "normal";
defparam \LessThan0~3 .output_mode = "comb_only";
defparam \LessThan0~3 .register_cascade_mode = "off";
defparam \LessThan0~3 .sum_lutc_input = "datac";
defparam \LessThan0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N2
maxii_lcell \LessThan0~2 (
// Equation(s):
// \LessThan0~2_combout  = (!counter[15] & (!counter[13] & (!counter[12] & !counter[14])))

	.clk(gnd),
	.dataa(counter[15]),
	.datab(counter[13]),
	.datac(counter[12]),
	.datad(counter[14]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~2 .lut_mask = "0001";
defparam \LessThan0~2 .operation_mode = "normal";
defparam \LessThan0~2 .output_mode = "comb_only";
defparam \LessThan0~2 .register_cascade_mode = "off";
defparam \LessThan0~2 .sum_lutc_input = "datac";
defparam \LessThan0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N0
maxii_lcell \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (((!counter[4]) # (!counter[5])) # (!counter[7])) # (!counter[6])

	.clk(gnd),
	.dataa(counter[6]),
	.datab(counter[7]),
	.datac(counter[5]),
	.datad(counter[4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = "7fff";
defparam \LessThan0~0 .operation_mode = "normal";
defparam \LessThan0~0 .output_mode = "comb_only";
defparam \LessThan0~0 .register_cascade_mode = "off";
defparam \LessThan0~0 .sum_lutc_input = "datac";
defparam \LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N8
maxii_lcell \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (!counter[8] & (!counter[9] & (!counter[10] & !counter[11])))

	.clk(gnd),
	.dataa(counter[8]),
	.datab(counter[9]),
	.datac(counter[10]),
	.datad(counter[11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = "0001";
defparam \LessThan0~1 .operation_mode = "normal";
defparam \LessThan0~1 .output_mode = "comb_only";
defparam \LessThan0~1 .register_cascade_mode = "off";
defparam \LessThan0~1 .sum_lutc_input = "datac";
defparam \LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N6
maxii_lcell \LessThan0~4 (
// Equation(s):
// \LessThan0~4_combout  = (\LessThan0~3_combout  & (\LessThan0~2_combout  & (\LessThan0~0_combout  & \LessThan0~1_combout )))

	.clk(gnd),
	.dataa(\LessThan0~3_combout ),
	.datab(\LessThan0~2_combout ),
	.datac(\LessThan0~0_combout ),
	.datad(\LessThan0~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~4 .lut_mask = "8000";
defparam \LessThan0~4 .operation_mode = "normal";
defparam \LessThan0~4 .output_mode = "comb_only";
defparam \LessThan0~4 .register_cascade_mode = "off";
defparam \LessThan0~4 .sum_lutc_input = "datac";
defparam \LessThan0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N7
maxii_lcell \LessThan0~8 (
// Equation(s):
// \LessThan0~8_combout  = (!counter[31] & (((!\LessThan0~4_combout ) # (!\LessThan0~7_combout )) # (!\LessThan0~5_combout )))

	.clk(gnd),
	.dataa(counter[31]),
	.datab(\LessThan0~5_combout ),
	.datac(\LessThan0~7_combout ),
	.datad(\LessThan0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~8 .lut_mask = "1555";
defparam \LessThan0~8 .operation_mode = "normal";
defparam \LessThan0~8 .output_mode = "comb_only";
defparam \LessThan0~8 .register_cascade_mode = "off";
defparam \LessThan0~8 .sum_lutc_input = "datac";
defparam \LessThan0~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N4
maxii_lcell state(
// Equation(s):
// \state~regout  = DFFEAS((\LessThan0~8_combout  $ ((\state~regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LessThan0~8_combout ),
	.datac(\state~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\state~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam state.lut_mask = "3c3c";
defparam state.operation_mode = "normal";
defparam state.output_mode = "reg_only";
defparam state.register_cascade_mode = "off";
defparam state.sum_lutc_input = "datac";
defparam state.synch_mode = "off";
// synopsys translate_on

// Location: PIN_41,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \LED~I (
	.datain(\state~regout ),
	.oe(vcc),
	.combout(),
	.padio(LED));
// synopsys translate_off
defparam \LED~I .operation_mode = "output";
// synopsys translate_on

endmodule
